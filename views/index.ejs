<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>商品レビューページ</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.4.0/css/bootstrap-reboot.min.css">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
        <link type="text/css" rel="stylesheet" href="css/style.css">
    </head>
    <body>
        <h1>商品レビュー</h1>
        <div id="rating-page">
            <div id="selectBox">
                <p>並べ替え</p>
                <select id="sortSelect">
                    <option value="" disabled selected>選択してください</option>
                    <option value="base" <% if (order==="base" ) { %> selected <% } %>> 標準</option>
                    <option value="rating:desc" <% if (order==="desc" ) { %> selected <% } %>> 評価が高い順</option>
                    <option value="rating:asc" <% if (order==="asc" ) { %> selected <% } %>> 評価が低い順</option>
                </select>
                <p>絞り込み</p>
                <select id="searchRating">
                    <option value="" disabled selected>選択してください</option>
                    <option value="base" <% if(search==="base" ) {%> selected <% } %>>標準</option>
                    <option value="rating:1" <% if(search==="1" ) {%> selected <% } %>>評価１</option>
                    <option value="rating:2" <% if(search==="2" ) {%> selected <% } %>>評価２</option>
                    <option value="rating:3" <% if(search==="3" ) {%> selected <% } %>>評価３</option>
                    <option value="rating:4" <% if(search==="4" ) {%> selected <% } %>>評価４</option>
                    <option value="rating:5" <% if(search==="5" ) {%> selected <% } %>>評価５</option>
                </select>
            </div>
                <!--課題04-->
            <table id="graph">
                <tr id="graphTr">
                    <th>年代</th>
                    <th>人数</th>
                </tr>
                <tr id="graphTr20">
                    <td>20代</td>
                    <td id="graphTd20"></td>
                </tr>
                <tr id="graphTr30">
                    <td>30代</td>
                    <td id="graphTd30"></td>
                </tr>
                <tr id="graphTr40">
                    <td>40代</td>
                    <td id="graphTd40"></td>
                </tr>
            </table>
            <!--課題05-->
            <form action='/' id="newData" class="formData" method=POST>
                <h2>レビューを入力</h2>
                <p id="pid1">ユーザー名 :<input id="newname1" type="text" name="username"  placeholder="ユーザー名"></p>
                <div id="listName1"></div>
                <p>年齢 : <input id="newname2" type="text" name="age" placeholder="年齢"></p>
                <div id="listName2"></div>
                <p>評価 : 
            <select name="rating" id="" name="rating" >
                <option value="5">評価5</option>
                <option value="4">評価4</option>
                <option value="3">評価3</option>
                <option value="2">評価2</option>
                <option value="1">評価1</option>
            </select></p>
                <p>評価内容</p>
                <textarea id="newname4" type="textarea" name="reason" placeholder="評価内容"></textarea>
                <div id="listName4"></div>
                <p><button type="submit" id="btn" onclick="return buttonClick()"  value="">追加</p>
            </form>
        </div>
        <!--課題01  ブラウザに出力-->
        <table id="table">
            <tbody id="reviewArea">
                <tr class="trClass">
                    <th>id</th>
                    <th>名前</th>
                    <th>年齢</th>
                    <th>評価</th>
                    <th>コメント</th>
                    <th>更新</th>
                </tr>
                <% for (let i=0; i < filteredPersonas.length; i++) { %>
                    <tr class="trclasss">
                        <td class="id"><%- filteredPersonas[i].id %></td>
                        <td class="username"><%- filteredPersonas[i].username %></td>
                        <td class="age"><%- filteredPersonas[i].age %></td>
                        <td class="rating"><%- filteredPersonas[i].rating %></td>
                        <td class="reason"><%- filteredPersonas[i].reason %></td>
                        <td><a href="/edit/<%=  filteredPersonas[i].id %>">更新</a></td>
                    </tr>
                    <% } %>
            </tbody>
        </table>
    </body>
</html>

<script type="text/javascript">
    const filteredPersonas = JSON.parse('<%= JSON.stringify(filteredPersonas) %>'.replace(/&#34;/g, '"'));
    // グラフ描画用に全ユーザー分の情報を取得
    const personasOrg = JSON.parse('<%= JSON.stringify(personasOrg) %>'.replace(/&#34;/g, '"'));
    const reviewArea = document.querySelector("#reviewArea")
    console.log(reviewArea)
    // 「並べ替え」のセレクトボックス
    const sortSelect = document.querySelector("#sortSelect")
    // 「絞り込み」のセレクトボックス
    const searchRating = document.querySelector("#searchRating")
    // 並べ替えを選択された場合のソート処理
    sortSelect.addEventListener("change", sortAndSearchSelect)
    // 絞り込みを選択された場合の処理
    searchRating.addEventListener("change", sortAndSearchSelect)

    //課題04 年代毎のグラフ作成
    let getGraphTd20 = document.getElementById("graphTd20")
    let getGraphTd30 = document.getElementById("graphTd30")
    let getGraphTd40 = document.getElementById("graphTd40")
    let count1 = 0;
    let count2 = 0;
    let count3 = 0;
    for (i = 0; i < personasOrg.length; i++) {
        if (personasOrg[i].age >= 20 && personasOrg[i].age <= 29) {
            count1++
            getGraphTd20.innerHTML = count1 + "人"
        }
        if (personasOrg[i].age >= 30 && personasOrg[i].age <= 39) {
            count2++
            getGraphTd30.innerHTML = count2 + "人"
        }
        if (personasOrg[i].age >= 40 && personasOrg[i].age <= 49) {
            count3++
            getGraphTd40.innerHTML = count3 + "人"
        }
    }
    //課題05 レビューの新規追加機能
    let newRow = reviewArea.insertRow(-1);
    let listName1 = document.getElementById("listName1");
    let listName2 = document.getElementById("listName2");
    let listName3 = document.getElementById("listName3");
    let listName4 = document.getElementById("listName4");
    function buttonClick() {
        let newname1 = document.getElementById("newname1");
        let newname2 = document.getElementById("newname2");
        let newname3 = document.getElementById("newname3");
        let newname4 = document.getElementById("newname4");
        let trueFalse = true;
        if (newname1.value == "") {
            listName1.innerHTML = "ユーザー名が未入力です";
            listName1.style.color = "red";
            trueFalse = false;
        }
        if (newname2.value == "") {
            listName2.innerHTML = "年齢が未入力です";
            listName2.style.color = "red";
            trueFalse = false;
        } else if (/^[0-9]*$/.test(newname2.value)) {
            listName2.textContent = "";
        } else {
            listName2.innerHTML = "半角数字で入力してください";
            listName2.style.color = "red";
            trueFalse = false;
        }
        if (newname4.value == "") {
            listName4.innerHTML = "評価内容が未入力です";
            listName4.style.color = "red";
            trueFalse = false;
        }
        return trueFalse;
    }
    //EX課題01
    function sortAndSearchSelect() {
        let res = ""
        let filterObj = []
        // 絞り込みの値
        let search = ""
        // ソートの値
        let order = ""
        // ソートに選択された値を検索
        for (option of sortSelect.options) {
            if (option.selected && option.value !== "") {
                filterObj["order"] = option.value
            }
        }
        // 絞り込みに選択された値を検索
        for (option of searchRating.options) {
            if (option.selected && option.value !== "") {
                filterObj["search"] = option.value
            }
        }
        // 「order=rating:asc」「search=rating:1」のような形に
        const filterArray = Object.keys(filterObj).map(function (key) {
            return [`${key}=${filterObj[key]}`];
        });
        // 複数あれば、「order=asc+search=1」のような形に変換、なければカンマは削除
        filterArray.length > 1 ? res = filterArray.join("+") : res = filterArray.join("")
        // ソートしたユーザー情報でindexをレンダリングする
        console.log(res) 
        location.assign(`/${res}`)
    }
</script>
